// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/cilium/cilium/api/v1/models"
)

// GetIPCacheOKCode is the HTTP code returned for type GetIPCacheOK
const GetIPCacheOKCode int = 200

/*GetIPCacheOK Success

swagger:response getIpCacheOK
*/
type GetIPCacheOK struct {

	/*
	  In: Body
	*/
	Payload *models.IPCache `json:"body,omitempty"`
}

// NewGetIPCacheOK creates GetIPCacheOK with default headers values
func NewGetIPCacheOK() *GetIPCacheOK {

	return &GetIPCacheOK{}
}

// WithPayload adds the payload to the get Ip cache o k response
func (o *GetIPCacheOK) WithPayload(payload *models.IPCache) *GetIPCacheOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get Ip cache o k response
func (o *GetIPCacheOK) SetPayload(payload *models.IPCache) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetIPCacheOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetIPCacheBadRequestCode is the HTTP code returned for type GetIPCacheBadRequest
const GetIPCacheBadRequestCode int = 400

/*GetIPCacheBadRequest Invalid request (error parsing parameters)

swagger:response getIpCacheBadRequest
*/
type GetIPCacheBadRequest struct {

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewGetIPCacheBadRequest creates GetIPCacheBadRequest with default headers values
func NewGetIPCacheBadRequest() *GetIPCacheBadRequest {

	return &GetIPCacheBadRequest{}
}

// WithPayload adds the payload to the get Ip cache bad request response
func (o *GetIPCacheBadRequest) WithPayload(payload models.Error) *GetIPCacheBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get Ip cache bad request response
func (o *GetIPCacheBadRequest) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetIPCacheBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetIPCacheNotFoundCode is the HTTP code returned for type GetIPCacheNotFound
const GetIPCacheNotFoundCode int = 404

/*GetIPCacheNotFound No IP cache entries with provided parameters found

swagger:response getIpCacheNotFound
*/
type GetIPCacheNotFound struct {
}

// NewGetIPCacheNotFound creates GetIPCacheNotFound with default headers values
func NewGetIPCacheNotFound() *GetIPCacheNotFound {

	return &GetIPCacheNotFound{}
}

// WriteResponse to the client
func (o *GetIPCacheNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
